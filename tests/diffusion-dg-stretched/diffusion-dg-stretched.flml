<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">diffusion-dg-stretched</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">fluids</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="box">
                <format name="triangle"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">1</integer_value>
                    </polynomial_degree>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">3</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">1000000</real_value>
            </constant>
        </dump_period>
        <output_mesh name="VelocityMesh"></output_mesh>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.2</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">0.1</real_value>
        </finish_time>
        <nonlinear_iterations>
            <integer_value rank="0">1</integer_value>
        </nonlinear_iterations>
        <steady_state>
            <tolerance>
                <real_value rank="0">1e-07</real_value>
                <infinity_norm></infinity_norm>
            </tolerance>
        </steady_state>
    </timestepping>
    <physical_parameters>
        <gravity>
            <magnitude>
                <real_value rank="0">1</real_value>
            </magnitude>
            <vector_field name="GravityDirection" rank="1">
                <prescribed>
                    <mesh name="CoordinateMesh"></mesh>
                    <value name="WholeMesh">
                        <constant>
                            <real_value rank="1" shape="2" dim1="dim">0 -1</real_value>
                        </constant>
                    </value>
                    <output></output>
                    <stat>
                        <include_in_stat></include_in_stat>
                    </stat>
                    <detectors>
                        <exclude_from_detectors></exclude_from_detectors>
                    </detectors>
                </prescribed>
            </vector_field>
        </gravity>
    </physical_parameters>
    <material_phase name="MyState">
        <vector_field name="Velocity" rank="1">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="2" dim1="dim">0 0</real_value>
                        <comment>was 1.0,0.0</comment>
                    </constant>
                </value>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </vector_field>
        <scalar_field name="BR_error" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">field1=state.scalar_fields[&quot;Tracer_BR&quot;]&#x0A;field2=state.scalar_fields[&quot;TemperatureExact&quot;]&#x0A;for i in range(field.node_count):&#x0A;   field.set(i, field1.node_val(i)-field2.node_val(i))</string_value>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="TemperatureExact" rank="0">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="python">def val(X,t):&#x0A;&#x09;from math import sin,pi,exp&#x0A;&#x09;L = 1000.0&#x0A;&#x09;x = X[0]/L&#x0A;&#x09;y = X[1]&#x0A;&#x09;return sin(2*pi*y)*((exp(2*pi)-1)*exp(-2*pi*x) + (1-exp(-2*pi))*exp(2*pi*x))/(exp(2*pi)-exp(-2*pi))</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="Tracer_BR" rank="0">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="AdvectionDiffusion"></equation>
                <spatial_discretisation>
                    <discontinuous_galerkin>
                        <advection_scheme>
                            <none></none>
                            <integrate_advection_by_parts>
                                <twice></twice>
                            </integrate_advection_by_parts>
                        </advection_scheme>
                        <diffusion_scheme>
                            <bassi_rebay></bassi_rebay>
                        </diffusion_scheme>
                        <mass_terms>
                            <exclude_mass_terms></exclude_mass_terms>
                        </mass_terms>
                    </discontinuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">2000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="sinusoidal">
                    <surface_ids>
                        <integer_value rank="1" shape="4">6 7 8 9</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <apply_weakly></apply_weakly>
                        <python>
                            <string_value lines="20" type="python">def val(X,t):&#x0A;&#x09;from math import pi, sin&#x0A;  #BR&#x0A;&#x09;y = X[1]&#x0A;&#x09;return sin(2*pi*y)</string_value>
                        </python>
                    </type>
                </boundary_conditions>
                <tensor_field name="Diffusivity" rank="2">
                    <prescribed>
                        <value name="WholeMesh">
                            <diagonal>
                                <constant>
                                    <real_value rank="1" shape="2" dim1="dim">1000000 1</real_value>
                                </constant>
                            </diagonal>
                        </value>
                        <output></output>
                    </prescribed>
                </tensor_field>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="Tracer_CDG" rank="0">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="AdvectionDiffusion"></equation>
                <spatial_discretisation>
                    <discontinuous_galerkin>
                        <advection_scheme>
                            <none></none>
                            <integrate_advection_by_parts>
                                <twice></twice>
                            </integrate_advection_by_parts>
                        </advection_scheme>
                        <diffusion_scheme>
                            <compact_discontinuous_galerkin></compact_discontinuous_galerkin>
                        </diffusion_scheme>
                        <mass_terms>
                            <exclude_mass_terms></exclude_mass_terms>
                        </mass_terms>
                    </discontinuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">2000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="sinusoidal">
                    <surface_ids>
                        <integer_value rank="1" shape="4">6 7 8 9</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <apply_weakly></apply_weakly>
                        <python>
                            <string_value lines="20" type="python">def val(X,t):&#x0A;  #CDG&#x0A;  from math import sin, pi&#x0A;  y = X[1]&#x0A;  return sin(2*pi*y)</string_value>
                        </python>
                    </type>
                </boundary_conditions>
                <tensor_field name="Diffusivity" rank="2">
                    <prescribed>
                        <value name="WholeMesh">
                            <diagonal>
                                <constant>
                                    <real_value rank="1" shape="2" dim1="dim">1000000 1</real_value>
                                </constant>
                            </diagonal>
                        </value>
                        <output></output>
                    </prescribed>
                </tensor_field>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="CDG_error" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">field1=state.scalar_fields[&quot;Tracer_CDG&quot;]&#x0A;field2=state.scalar_fields[&quot;TemperatureExact&quot;]&#x0A;for i in range(field.node_count):&#x0A;   field.set(i, field1.node_val(i)-field2.node_val(i))</string_value>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
</fluidity_options>
