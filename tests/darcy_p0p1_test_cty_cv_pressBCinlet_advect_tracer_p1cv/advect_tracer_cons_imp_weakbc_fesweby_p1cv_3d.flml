<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">advect_tracer_cons_imp_weakbc_fesweby_p1cv_3d</string_value>
        <comment>a simple short test case for darcy flow using the element type p0p1_test_cty_cv for velocity-pressure&#x0A;&#x0A;the darcy velocity is solved for then the tracer is advected using a CV scheme on a continuous mesh.&#x0A;&#x0A;it compares the pressure gradient against the analytic, as well as checking that the interstitial velocity is correct &#x0A;&#x0A;the darcy flow equation is&#x0A;&#x0A;sigma*darcy_vel = - grad P&#x0A;&#x0A;where darcy_vel = porosity*interstitial_velocity&#x0A;&#x0A;sigma is a function of viscosity and permeability&#x0A;&#x0A;python diagnostics are used to form the sigma term that is assoicated with a p0 dg mesh (ie. element wise) and the interstitial velocity&#x0A;&#x0A;this case has a 1 region 1 material with pressure boundary condition inflow. &#x0A;&#x0A;to get a darcy equation the time, stress and advection terms are not included in a bousinessq formulation (to avoid needing to specify a density). Ideally it would be better to actually have a darcy momentum option to simplify the input.&#x0A;&#x0A;the absorption term is included in the pressure correction (being a necessity as it is the only term in the matrix equation) &#x0A;&#x0A;the geometry is 2d (although this is a 1d problem)&#x0A;&#x0A;NOTE: Because the velocity and pressure are time independent the simulation is broken into two.&#x0A;      First the velocity and pressure are solved and checkpointed. &#x0A;      Second the tracer is advected using a prescribed velocity from the previous checkpointed run.</comment>
    </simulation_name>
    <problem_type>
        <string_value lines="1">fluids</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">3</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="darcy_p0p1_test_cty_cv_pressBCinlet_3d_CoordinateMesh_1_checkpoint">
                <format name="gmsh"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">0</integer_value>
                    </polynomial_degree>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="DGP0">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">0</integer_value>
                    </polynomial_degree>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="OutputMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
                <mesh_shape>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">5</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period_in_timesteps>
            <constant>
                <integer_value rank="0">10</integer_value>
            </constant>
        </dump_period_in_timesteps>
        <output_mesh name="OutputMesh"></output_mesh>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.5</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">15</real_value>
        </finish_time>
    </timestepping>
    <material_phase name="fluid">
        <vector_field name="Velocity" rank="1">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <from_file file_name="darcy_p0p1_test_cty_cv_pressBCinlet_3d_VelocityMesh_1_checkpoint.vtu">
                        <format name="vtu"></format>
                    </from_file>
                </value>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </vector_field>
        <scalar_field name="Tracer" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <equation name="AdvectionDiffusion"></equation>
                <spatial_discretisation>
                    <control_volumes>
                        <face_value name="FiniteElement">
                            <limit_face_value>
                                <limiter name="Sweby">
                                    <locally_bound_upwind_value></locally_bound_upwind_value>
                                </limiter>
                            </limit_face_value>
                        </face_value>
                        <diffusion_scheme name="ElementGradient"></diffusion_scheme>
                    </control_volumes>
                    <conservative_advection>
                        <real_value rank="0">1</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                    <control_volumes>
                        <number_advection_iterations>
                            <integer_value rank="0">5</integer_value>
                            <tolerance>
                                <real_value rank="0">1e-10</real_value>
                                <infinity_norm></infinity_norm>
                            </tolerance>
                        </number_advection_iterations>
                        <pivot_theta>
                            <real_value rank="0">1</real_value>
                        </pivot_theta>
                    </control_volumes>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="gmres">
                        <restart>
                            <integer_value rank="0">30</integer_value>
                        </restart>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-10</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">1000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="left_inflow">
                    <surface_ids>
                        <integer_value rank="1" shape="1">3</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <apply_weakly></apply_weakly>
                        <constant>
                            <real_value rank="0">1</real_value>
                        </constant>
                    </type>
                </boundary_conditions>
                <porosity></porosity>
                <output></output>
                <stat>
                    <include_cv_stats></include_cv_stats>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="TracerAnalytic" rank="0">
            <prescribed>
                <mesh name="PressureMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;   &#x0A;   speed = 10&#x0A;   &#x0A;   distance = speed * t&#x0A;   &#x0A;   if X[0] &lt;= distance:&#x0A;      &#x0A;      analytic_val = 1.0&#x0A;   &#x0A;   else:&#x0A;      &#x0A;      analytic_val = 0.0&#x0A;   &#x0A;   return analytic_val</string_value>
                    </python>
                </value>
                <output></output>
                <stat>
                    <include_cv_stats></include_cv_stats>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="AnalyticError" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="Tracer" source_field_2_name="TracerAnalytic" material_phase_support="single" source_field_1_type="scalar">
                    <absolute_difference></absolute_difference>
                </algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
    <porous_media>
        <scalar_field name="Porosity">
            <prescribed>
                <mesh name="DGP0"></mesh>
                <value name="WholeMesh">
                    <constant>
                        <real_value rank="0">0.5</real_value>
                    </constant>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
    </porous_media>
</fluidity_options>
