<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>lagrange_tracer</name>
  <owner userid="cwilson"/>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity -v2 -l lagrange_tracer.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="detector_locx_0" language="python">
import numpy as np
from H5hutpy import *

f = H5OpenFile("lagrange_tracer.particles.SingleParticle.h5part", H5_O_RDONLY, H5_PROP_DEFAULT)
nsteps = H5GetNumSteps(f)

H5SetStep(f, nsteps-1)
pos = np.empty(1, dtype='float64')
H5PartReadDataFloat64(f, 'x', pos)

detector_locx_0 = pos</variable>
    <variable name="detector_locy_0" language="python">
import numpy as np
from H5hutpy import *

f = H5OpenFile("lagrange_tracer.particles.SingleParticle.h5part", H5_O_RDONLY, H5_PROP_DEFAULT)
nsteps = H5GetNumSteps(f)

H5SetStep(f, nsteps-1)
pos = np.empty(1, dtype='float64')
H5PartReadDataFloat64(f, 'y', pos)

detector_locy_0 = pos</variable>
    <variable name="detected_field_value" language="python">
import numpy as np
from H5hutpy import *

f = H5OpenFile("lagrange_tracer.particles.SingleParticle.h5part", H5_O_RDONLY, H5_PROP_DEFAULT)
nsteps = H5GetNumSteps(f)

H5SetStep(f, nsteps-1)
pos = np.empty(1, dtype='float64')
H5PartReadDataFloat64(f, 'field', pos)

detected_field_value = pos</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="correct_x" language="python">print("detector should be at "+str(2./3.-0.1/3.)+", actually at "+str(detector_locx_0))
assert(abs(detector_locx_0-(2./3.-0.1/3.)) &lt; 1.e-9)
</test>
    <test name="correct_y" language="python">print("detector should be at "+str(1./3.+0.1/3.)+", actually at "+str(detector_locy_0))
assert(abs(detector_locy_0-(1./3.+0.1/3.0)) &lt; 1.e-9)
</test>
    <test name="correct_field_value" language="python">print("detector value should be "+str(1.0)+", actually "+str(detected_field_value))
assert(abs(detected_field_value-1.0) &lt; 1.e-9)
</test>
  </pass_tests>
</testproblem>
