<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">MMS_C</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">fluids</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_mesh>
                <mesh name="InputMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="InputMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="InputMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="InputMesh">
            <from_file file_name="MMS_C">
                <format name="triangle"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">4</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">25</real_value>
            </constant>
        </dump_period>
        <output_mesh name="VelocityMesh"></output_mesh>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.01</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">20</real_value>
        </finish_time>
        <nonlinear_iterations>
            <integer_value rank="0">1</integer_value>
        </nonlinear_iterations>
        <adaptive_timestep>
            <requested_cfl>
                <real_value rank="0">2</real_value>
            </requested_cfl>
            <courant_number name="CFLNumber">
                <mesh name="VelocityMesh"></mesh>
            </courant_number>
        </adaptive_timestep>
        <steady_state>
            <tolerance>
                <real_value rank="0">1e-06</real_value>
                <infinity_norm></infinity_norm>
            </tolerance>
        </steady_state>
    </timestepping>
    <material_phase name="NS">
        <subgridscale_parameterisations>
            <k-epsilon>
                <scalar_field name="TurbulentKineticEnergy" rank="0">
                    <prognostic>
                        <mesh name="VelocityMesh"></mesh>
                        <equation name="AdvectionDiffusion"></equation>
                        <spatial_discretisation>
                            <continuous_galerkin>
                                <stabilisation>
                                    <no_stabilisation></no_stabilisation>
                                </stabilisation>
                                <advection_terms></advection_terms>
                                <mass_terms></mass_terms>
                            </continuous_galerkin>
                            <conservative_advection>
                                <real_value rank="0">0</real_value>
                            </conservative_advection>
                        </spatial_discretisation>
                        <temporal_discretisation>
                            <theta>
                                <real_value rank="0">0.5</real_value>
                            </theta>
                        </temporal_discretisation>
                        <solver>
                            <iterative_method name="gmres">
                                <restart>
                                    <integer_value rank="0">30</integer_value>
                                </restart>
                            </iterative_method>
                            <preconditioner name="sor"></preconditioner>
                            <relative_error>
                                <real_value rank="0">1e-08</real_value>
                            </relative_error>
                            <max_iterations>
                                <integer_value rank="0">10000</integer_value>
                            </max_iterations>
                            <never_ignore_solver_failures></never_ignore_solver_failures>
                            <diagnostics>
                                <monitors></monitors>
                            </diagnostics>
                        </solver>
                        <initial_condition name="WholeMesh">
                            <constant>
                                <real_value rank="0">0.0001</real_value>
                            </constant>
                        </initial_condition>
                        <boundary_conditions name="all_sides">
                            <surface_ids>
                                <integer_value rank="1" shape="4">7 8 9 10</integer_value>
                            </surface_ids>
                            <type name="dirichlet">
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        tke=k.tke(X)&#x0A;        return tke</string_value>
                                </python>
                            </type>
                        </boundary_conditions>
                        <tensor_field name="Diffusivity" rank="2">
                            <diagnostic>
                                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                                <output></output>
                                <stat>
                                    <exclude_from_stat></exclude_from_stat>
                                </stat>
                            </diagnostic>
                        </tensor_field>
                        <scalar_field name="Source" rank="0">
                            <prescribed>
                                <value name="WholeMesh">
                                    <python>
                                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        return k.forcing_k(X)</string_value>
                                    </python>
                                </value>
                                <output></output>
                                <stat></stat>
                                <detectors>
                                    <exclude_from_detectors></exclude_from_detectors>
                                </detectors>
                            </prescribed>
                        </scalar_field>
                        <scalar_field name="Absorption" rank="0">
                            <diagnostic>
                                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                                <output></output>
                                <stat></stat>
                                <detectors>
                                    <include_in_detectors></include_in_detectors>
                                </detectors>
                            </diagnostic>
                        </scalar_field>
                        <output>
                            <include_previous_time_step></include_previous_time_step>
                        </output>
                        <stat></stat>
                        <convergence>
                            <include_in_convergence></include_in_convergence>
                        </convergence>
                        <detectors>
                            <include_in_detectors></include_in_detectors>
                        </detectors>
                        <steady_state>
                            <exclude_from_steady_state></exclude_from_steady_state>
                        </steady_state>
                        <consistent_interpolation></consistent_interpolation>
                    </prognostic>
                </scalar_field>
                <scalar_field name="TurbulentDissipation" rank="0">
                    <prognostic>
                        <mesh name="VelocityMesh"></mesh>
                        <equation name="AdvectionDiffusion"></equation>
                        <spatial_discretisation>
                            <continuous_galerkin>
                                <stabilisation>
                                    <no_stabilisation></no_stabilisation>
                                </stabilisation>
                                <advection_terms></advection_terms>
                                <mass_terms></mass_terms>
                            </continuous_galerkin>
                            <conservative_advection>
                                <real_value rank="0">0</real_value>
                            </conservative_advection>
                        </spatial_discretisation>
                        <temporal_discretisation>
                            <theta>
                                <real_value rank="0">0.5</real_value>
                            </theta>
                        </temporal_discretisation>
                        <solver>
                            <iterative_method name="gmres">
                                <restart>
                                    <integer_value rank="0">30</integer_value>
                                </restart>
                            </iterative_method>
                            <preconditioner name="sor"></preconditioner>
                            <relative_error>
                                <real_value rank="0">1e-08</real_value>
                            </relative_error>
                            <max_iterations>
                                <integer_value rank="0">10000</integer_value>
                            </max_iterations>
                            <never_ignore_solver_failures></never_ignore_solver_failures>
                            <diagnostics>
                                <monitors></monitors>
                            </diagnostics>
                        </solver>
                        <initial_condition name="WholeMesh">
                            <constant>
                                <real_value rank="0">1e-06</real_value>
                            </constant>
                        </initial_condition>
                        <boundary_conditions name="all_sides">
                            <surface_ids>
                                <integer_value rank="1" shape="4">7 8 9 10</integer_value>
                            </surface_ids>
                            <type name="dirichlet">
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        eps=k.eps(X)&#x0A;        return eps</string_value>
                                </python>
                            </type>
                        </boundary_conditions>
                        <tensor_field name="Diffusivity" rank="2">
                            <diagnostic>
                                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                                <output></output>
                                <stat>
                                    <exclude_from_stat></exclude_from_stat>
                                </stat>
                            </diagnostic>
                        </tensor_field>
                        <scalar_field name="Source" rank="0">
                            <prescribed>
                                <value name="WholeMesh">
                                    <python>
                                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        return k.forcing_eps(X)</string_value>
                                    </python>
                                </value>
                                <output></output>
                                <stat></stat>
                                <detectors>
                                    <exclude_from_detectors></exclude_from_detectors>
                                </detectors>
                            </prescribed>
                        </scalar_field>
                        <scalar_field name="Absorption" rank="0">
                            <diagnostic>
                                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                                <output></output>
                                <stat></stat>
                                <detectors>
                                    <include_in_detectors></include_in_detectors>
                                </detectors>
                            </diagnostic>
                        </scalar_field>
                        <output>
                            <include_previous_time_step></include_previous_time_step>
                        </output>
                        <stat></stat>
                        <convergence>
                            <include_in_convergence></include_in_convergence>
                        </convergence>
                        <detectors>
                            <include_in_detectors></include_in_detectors>
                        </detectors>
                        <steady_state>
                            <exclude_from_steady_state></exclude_from_steady_state>
                        </steady_state>
                        <consistent_interpolation></consistent_interpolation>
                    </prognostic>
                </scalar_field>
                <tensor_field name="BackgroundViscosity" rank="2">
                    <prescribed>
                        <mesh name="VelocityMesh"></mesh>
                        <value name="WholeMesh">
                            <isotropic>
                                <constant>
                                    <real_value rank="0">0.7</real_value>
                                </constant>
                            </isotropic>
                        </value>
                        <output>
                            <exclude_from_vtu></exclude_from_vtu>
                        </output>
                    </prescribed>
                </tensor_field>
                <tensor_field name="EddyViscosity" rank="2">
                    <diagnostic>
                        <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                        <mesh name="VelocityMesh"></mesh>
                        <output>
                            <exclude_from_vtu></exclude_from_vtu>
                        </output>
                        <stat>
                            <exclude_from_stat></exclude_from_stat>
                        </stat>
                    </diagnostic>
                </tensor_field>
                <scalar_field name="ScalarEddyViscosity" rank="0">
                    <diagnostic>
                        <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                        <mesh name="VelocityMesh"></mesh>
                        <output></output>
                        <stat></stat>
                        <convergence>
                            <include_in_convergence></include_in_convergence>
                        </convergence>
                        <detectors>
                            <include_in_detectors></include_in_detectors>
                        </detectors>
                        <steady_state>
                            <exclude_from_steady_state></exclude_from_steady_state>
                        </steady_state>
                    </diagnostic>
                </scalar_field>
                <scalar_field name="LengthScale" rank="0">
                    <diagnostic>
                        <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                        <mesh name="VelocityMesh"></mesh>
                        <output></output>
                        <stat></stat>
                        <convergence>
                            <include_in_convergence></include_in_convergence>
                        </convergence>
                        <detectors>
                            <include_in_detectors></include_in_detectors>
                        </detectors>
                        <steady_state>
                            <include_in_steady_state></include_in_steady_state>
                        </steady_state>
                    </diagnostic>
                </scalar_field>
                <source_absorption>
                    <string_value>explicit</string_value>
                </source_absorption>
                <lengthscale_limit>
                    <real_value rank="0">3</real_value>
                </lengthscale_limit>
                <C_mu>
                    <real_value rank="0">0.09</real_value>
                </C_mu>
                <C_eps_1>
                    <real_value rank="0">1.44</real_value>
                </C_eps_1>
                <C_eps_2>
                    <real_value rank="0">1.92</real_value>
                </C_eps_2>
                <sigma_k>
                    <real_value rank="0">1</real_value>
                </sigma_k>
                <sigma_eps>
                    <real_value rank="0">1.3</real_value>
                </sigma_eps>
            </k-epsilon>
        </subgridscale_parameterisations>
        <scalar_field name="Pressure" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <spatial_discretisation>
                    <continuous_galerkin></continuous_galerkin>
                </spatial_discretisation>
                <reference_node>
                    <integer_value rank="0">1</integer_value>
                </reference_node>
                <scheme>
                    <poisson_pressure_solution>
                        <string_value lines="1">never</string_value>
                    </poisson_pressure_solution>
                    <use_projection_method></use_projection_method>
                </scheme>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-08</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">10000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">0</real_value>
                    </constant>
                </initial_condition>
                <output>
                    <include_previous_time_step></include_previous_time_step>
                </output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <steady_state>
                    <exclude_from_steady_state></exclude_from_steady_state>
                </steady_state>
                <no_interpolation></no_interpolation>
            </prognostic>
        </scalar_field>
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="Boussinesq"></equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <mass_terms>
                            <lump_mass_matrix></lump_mass_matrix>
                        </mass_terms>
                        <advection_terms></advection_terms>
                        <stress_terms>
                            <tensor_form></tensor_form>
                        </stress_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">0.5</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">0.5</real_value>
                    </relaxation>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="gmres">
                        <restart>
                            <integer_value rank="0">30</integer_value>
                        </restart>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">10000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="2" dim1="dim">0 0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="all_sides">
                    <surface_ids>
                        <integer_value rank="1" shape="4">7 8 9 10</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <align_bc_with_cartesian>
                            <x_component>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;   import k_epsilon_tools as k&#x0A;   # Shear rotation about origin.&#x0A;   return k.velocity(X)[0]</string_value>
                                </python>
                            </x_component>
                            <y_component>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;   import k_epsilon_tools as k&#x0A;   # Shear rotation about origin.&#x0A;   return k.velocity(X)[1]</string_value>
                                </python>
                            </y_component>
                        </align_bc_with_cartesian>
                    </type>
                </boundary_conditions>
                <tensor_field name="Viscosity" rank="2">
                    <diagnostic>
                        <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                        <output></output>
                        <stat>
                            <include_in_stat></include_in_stat>
                        </stat>
                    </diagnostic>
                </tensor_field>
                <vector_field name="Source" rank="1">
                    <prescribed>
                        <value name="WholeMesh">
                            <python>
                                <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;   import k_epsilon_tools as k&#x0A;   return k.forcing_mom(X)</string_value>
                            </python>
                        </value>
                        <output></output>
                        <stat>
                            <include_in_stat></include_in_stat>
                        </stat>
                        <detectors>
                            <exclude_from_detectors></exclude_from_detectors>
                        </detectors>
                    </prescribed>
                </vector_field>
                <output>
                    <include_previous_time_step></include_previous_time_step>
                </output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <exclude_from_steady_state></exclude_from_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="CFLNumber" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="PressureAnalytical" rank="0">
            <prescribed>
                <mesh name="PressureMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        return k.pressure(X)</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="PressureDifference" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="code" language="python">E=state.scalar_fields[&quot;Pressure&quot;]&#x0A;S=state.scalar_fields[&quot;PressureAnalytical&quot;]&#x0A;&#x0A;for n in range(field.node_count):&#x0A;&#x09;E_n=E.node_val(n)&#x0A;&#x09;S_n=S.node_val(n)&#x0A;&#x09;field.set(n,E_n-S_n)</string_value>
                    <depends>
                        <string_value lines="1">Pressure</string_value>
                    </depends>
                </algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="EddyViscosityAnalytical" rank="0">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        nut=k.nut(X)&#x0A;        return nut</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="EddyViscosityDifference" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="code" language="python">E=state.scalar_fields[&quot;ScalarEddyViscosity&quot;]&#x0A;S=state.scalar_fields[&quot;EddyViscosityAnalytical&quot;]&#x0A;&#x0A;for n in range(field.node_count):&#x0A;&#x09;E_n=E.node_val(n)&#x0A;&#x09;S_n=S.node_val(n)&#x0A;&#x09;field.set(n,E_n-S_n)</string_value>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="TKEAnalytical" rank="0">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        tke=k.tke(X)&#x0A;        return tke</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="TKEDifference" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="code" language="python">E=state.scalar_fields[&quot;TurbulentKineticEnergy&quot;]&#x0A;S=state.scalar_fields[&quot;TKEAnalytical&quot;]&#x0A;&#x0A;for n in range(field.node_count):&#x0A;&#x09;E_n=E.node_val(n)&#x0A;&#x09;S_n=S.node_val(n)&#x0A;&#x09;field.set(n,E_n-S_n)</string_value>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="EpsilonAnalytical" rank="0">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        eps=k.eps(X)&#x0A;        return eps</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="EpsilonDifference" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="code" language="python">E=state.scalar_fields[&quot;TurbulentDissipation&quot;]&#x0A;S=state.scalar_fields[&quot;EpsilonAnalytical&quot;]&#x0A;&#x0A;for n in range(field.node_count):&#x0A;&#x09;E_n=E.node_val(n)&#x0A;&#x09;S_n=S.node_val(n)&#x0A;&#x09;field.set(n,E_n-S_n)</string_value>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <vector_field name="VelocityAnalytical" rank="1">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;        import k_epsilon_tools as k&#x0A;        return k.velocity(X)</string_value>
                    </python>
                </value>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </vector_field>
        <vector_field name="VelocityDifference" rank="1">
            <diagnostic>
                <algorithm name="vector_difference" source_field_2_type="vector" source_field_1_name="Velocity" source_field_2_name="VelocityAnalytical" material_phase_support="single" source_field_1_type="vector"></algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </vector_field>
    </material_phase>
</fluidity_options>
