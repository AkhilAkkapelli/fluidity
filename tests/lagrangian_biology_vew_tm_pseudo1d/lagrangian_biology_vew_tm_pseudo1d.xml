<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<testproblem>
  <name>lagrangian_biology_vew_tm_3d</name>
  <owner userid="mlange"/>
  <tags>flml lagrangian_biology</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>
../../bin/fluidity -v2 -l -p lagrangian_biology.flml
    </command_line>
  </problem_definition>
  <variables>
    <variable name="agent_count_living" language="python">
from fluidity_tools import stat_parser
agent_count_living = stat_parser("vew_toymodel.stat")['Water']['DiatomAgentsLiving']['integral'][::48]
    </variable>
    <variable name="agent_count_dead" language="python">
from fluidity_tools import stat_parser
agent_count_dead = stat_parser("vew_toymodel.stat")['Water']['DiatomAgentsDead']['integral'][::48]
    </variable>
    <variable name="biomass_living" language="python">
from fluidity_tools import stat_parser
biomass_living = stat_parser("vew_toymodel.stat")['Water']['DiatomEnsembleSizeLiving']['integral'][::48]
    </variable>
    <variable name="biomass_dead" language="python">
from fluidity_tools import stat_parser
biomass_dead = stat_parser("vew_toymodel.stat")['Water']['DiatomEnsembleSizeDead']['integral'][::48]
    </variable>
    <variable name="dissolved_ammonium_min" language="python">
from fluidity_tools import stat_parser
dissolved_ammonium_min = stat_parser("vew_toymodel.stat")['Water']['DissolvedAmmonium']['min']
    </variable>
    <variable name="dissolved_nitrate_min" language="python">
from fluidity_tools import stat_parser
dissolved_nitrate_min = stat_parser("vew_toymodel.stat")['Water']['DissolvedNitrate']['min']
    </variable>
    <variable name="dissolved_silicate_min" language="python">
from fluidity_tools import stat_parser
dissolved_silicate_min = stat_parser("vew_toymodel.stat")['Water']['DissolvedSilicate']['min']
    </variable>
  </variables>
  <pass_tests>
    <test name="ammonium_non_negative" language="python">
assert abs(dissolved_ammonium_min).all() &gt; 1.0e-12
    </test>
    <test name="nitrate_non_negative" language="python">
assert abs(dissolved_nitrate_min).all() &gt; 1.0e-12
    </test>
    <test name="silicate_non_negative" language="python">
assert abs(dissolved_silicate_min).all() &gt; 1.0e-12
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
