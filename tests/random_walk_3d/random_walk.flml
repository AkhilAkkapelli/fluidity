<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">random_walk_3d</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="column">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">10.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">100.0</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="Water">
    <vector_field name="Velocity" rank="1">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value shape="3" dim1="dim" rank="1">0.0 0.0 0.0</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </vector_field>
    <scalar_field name="Diffusivity" rank="0">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="python">from math import pow

def val(X, t):
  ## Recreate Fig. 1 in Visser, 1997, by using Fig. 3 in Ross and Sharples, 2004
  z = X[0]
  K_z = 0.001 + 0.0136245 * z - 0.00263245 * pow(z,2) + 0.000211875 * pow(z,3) - 0.00000865898 * pow(z,4) + 0.00000017623 * pow(z,5) - 0.00000000140918 * pow(z,6)
  return K_z</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
  </material_phase>
  <ocean_biology>
    <lagrangian_ensemble>
      <disable_biology/>
      <agents>
        <agent_array name="Naive_RW">
          <number_of_agents>
            <integer_value rank="0">4000</integer_value>
          </number_of_agents>
          <lagrangian/>
          <binary_output/>
          <initial_position>
            <string_value lines="20" type="python">def val(t):
  from numpy import arange, zeros, concatenate, reshape
  # 4000 agents, evenly spaced in [0:40]
  x = zeros(4000)
  y = zeros(4000)
  z = arange(0.,40.,0.01) *-1.0
  return reshape(concatenate((x,y,z)),(3,4000)).T</string_value>
          </initial_position>
          <random_walk>
            <python>
              <string_value lines="20" type="python">from numpy import random
from math import sqrt

diffusivity = state.scalar_fields['Diffusivity']

def val(ele, local_coord):
  rnd = random.uniform(-1.,1.,1)
  K = diffusivity.eval_field(ele, local_coord)
  return [0.0,0.0,rnd * sqrt(6*K)]</string_value>
            </python>
            <random_seed>
              <integer_value rank="0">113165</integer_value>
            </random_seed>
          </random_walk>
          <exclude_from_advection/>
        </agent_array>
        <lagrangian_timestepping>
          <explicit_runge_kutta_guided_search>
            <subcycles>
              <integer_value rank="0">1</integer_value>
            </subcycles>
            <search_tolerance>
              <real_value rank="0">1.0e-10</real_value>
            </search_tolerance>
            <n_stages>
              <integer_value rank="0">4</integer_value>
            </n_stages>
            <stage_weights>
              <real_value shape="6" rank="1">0.5 0. 0.5 0. 0. 1</real_value>
            </stage_weights>
            <timestep_weights>
              <real_value shape="4" rank="1">0.16666666666666666 0.3333333333333333
 0.3333333333333333 0.16666666666666666</real_value>
            </timestep_weights>
          </explicit_runge_kutta_guided_search>
          <reflect_on_boundary/>
        </lagrangian_timestepping>
      </agents>
    </lagrangian_ensemble>
  </ocean_biology>
</fluidity_options>
