<?xml version="1.0" encoding="utf-8" ?>
<shallow_water_options>
    <simulation_name>
        <string_value lines="1">test_A</string_value>
    </simulation_name>
    <geometry>
        <dimension>
            <integer_value rank="0">3</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="src/mesh_A">
                <format name="triangle"></format>
                <dimension>
                    <integer_value rank="0">1</integer_value>
                </dimension>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="PeriodicMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
                <mesh_shape>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="PeriodicMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PeriodicMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <periodic_boundary_conditions name="periodicity">
                    <physical_boundary_ids>
                        <integer_value rank="1" shape="1">1</integer_value>
                    </physical_boundary_ids>
                    <aliased_boundary_ids>
                        <integer_value rank="1" shape="1">2</integer_value>
                    </aliased_boundary_ids>
                    <coordinate_map>
                        <string_value lines="20" type="code" language="python">def val(X,t):&#x0A;  result = list(X)&#x0A;  result[0]=result[0]-1.0&#x0A;  return result</string_value>
                    </coordinate_map>
                </periodic_boundary_conditions>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">4</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period_in_timesteps>
            <constant>
                <integer_value rank="0">1</integer_value>
            </constant>
        </dump_period_in_timesteps>
        <output_mesh name="CoordinateMesh"></output_mesh>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.5</real_value>
        </timestep>
        <nonlinear_iterations>
            <integer_value rank="0">1</integer_value>
        </nonlinear_iterations>
        <finish_time>
            <real_value rank="0">0.5</real_value>
        </finish_time>
    </timestepping>
    <physical_parameters>
        <gravity>
            <magnitude>
                <real_value rank="0">1</real_value>
            </magnitude>
            <vector_field name="GravityDirection" rank="1">
                <prescribed>
                    <mesh name="CoordinateMesh"></mesh>
                    <value name="WholeMesh">
                        <constant>
                            <real_value rank="1" shape="3" dim1="dim">0 0 -1</real_value>
                        </constant>
                    </value>
                    <output></output>
                    <stat>
                        <include_in_stat></include_in_stat>
                    </stat>
                    <detectors>
                        <exclude_from_detectors></exclude_from_detectors>
                    </detectors>
                    <adjoint_storage>
                        <exists_in_forward></exists_in_forward>
                    </adjoint_storage>
                </prescribed>
            </vector_field>
        </gravity>
    </physical_parameters>
    <material_phase name="Fluid">
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="ShallowWater"></equation>
                <spatial_discretisation>
                    <discontinuous_galerkin>
                        <advection_scheme>
                            <none></none>
                        </advection_scheme>
                    </discontinuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">500</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="3" dim1="dim">0 0 0</real_value>
                    </constant>
                </initial_condition>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="LayerThickness" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <advection_terms>
                            <exclude_advection_terms></exclude_advection_terms>
                        </advection_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">0.5</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">500</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <cache_solver_context></cache_solver_context>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">0</real_value>
                    </constant>
                </initial_condition>
                <mean_layer_thickness>
                    <real_value rank="0">1</real_value>
                </mean_layer_thickness>
                <output></output>
                <stat></stat>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="AnalyticalDivSource" rank="0">
            <prescribed>
                <mesh name="PressureMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;    from math import sin, cos, pi&#x0A;    return 2*pi * cos(2*pi*X[0])</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <adjoint_storage>
                    <exists_in_forward></exists_in_forward>
                </adjoint_storage>
            </prescribed>
        </scalar_field>
        <scalar_field name="DivSource" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="code" language="python">import fluidity_tools&#x0A;import scipy.sparse&#x0A;import scipy.sparse.linalg&#x0A;coord  = state.vector_fields[&quot;Coordinate&quot;]&#x0A;source = state.vector_fields[&quot;Source&quot;]&#x0A;u_mesh = state.meshes[&quot;VelocityMesh&quot;]&#x0A;h_mass = scipy.sparse.lil_matrix((field.node_count, field.node_count))&#x0A;&#x0A;field.val[:] = numpy.zeros(len(field.val))&#x0A;for ele in range(coord.ele_count):&#x0A;  little_val = [0.0 for x in coord.remap_ele(ele, field.mesh)] &#x0A;  shape = field.ele_shape(ele)&#x0A;  t = Transform(ele, coord)&#x0A;  u_dshape = t.grad(u_mesh.shape)&#x0A;  cT = t.shape_dshape(shape, u_dshape)&#x0A;  for dim in range(source.dimension):&#x0A;    little_val += numpy.dot(cT[:,:,dim], source.ele_val(ele)[:, dim])&#x0A;  field.addto(field.ele_nodes(ele), little_val)&#x0A;  &#x0A;  eta_mass = t.shape_shape(shape, shape)&#x0A;  for local_i, i in enumerate(field.ele_nodes(ele)):&#x0A;    for local_j, j in enumerate(field.ele_nodes(ele)):&#x0A;      h_mass[i,j] += eta_mass[local_i, local_j]&#x0A;  &#x0A;h_mass = h_mass.tocsr()&#x0A;(field.val[:], info) = scipy.sparse.linalg.cg(h_mass, field.val, tol=1.0e-15)&#x0A;assert info == 0</string_value>
                </algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <adjoint_storage>
                    <exists_in_forward></exists_in_forward>
                </adjoint_storage>
            </diagnostic>
        </scalar_field>
        <scalar_field name="DivError" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="AnalyticalDivSource" source_field_2_name="DivSource" material_phase_support="single" source_field_1_type="scalar">
                    <absolute_difference></absolute_difference>
                </algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <adjoint_storage>
                    <exists_in_forward></exists_in_forward>
                </adjoint_storage>
            </diagnostic>
        </scalar_field>
        <vector_field name="Source" rank="1">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;    from math import sin, cos, pi&#x0A;    return [sin(2*pi*X[0]), 0, 0]</string_value>
                    </python>
                </value>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <adjoint_storage>
                    <exists_in_forward></exists_in_forward>
                </adjoint_storage>
            </prescribed>
        </vector_field>
    </material_phase>
</shallow_water_options>
