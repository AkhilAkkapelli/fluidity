<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">spherical_segment</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">oceans</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">3</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_mesh>
                <mesh name="BaseMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="BaseMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
                <mesh_shape>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="BaseMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="InputMesh">
            <from_file file_name="patch">
                <format name="gmsh"></format>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="BaseMesh">
            <from_mesh>
                <mesh name="InputMesh"></mesh>
                <extrude>
                    <regions name="WholeMesh">
                        <bottom_depth>
                            <constant>
                                <real_value rank="0">90</real_value>
                            </constant>
                        </bottom_depth>
                        <sizing_function>
                            <constant>
                                <real_value rank="0">30</real_value>
                            </constant>
                        </sizing_function>
                        <top_surface_id>
                            <integer_value rank="0">1</integer_value>
                        </top_surface_id>
                        <bottom_surface_id>
                            <integer_value rank="0">2</integer_value>
                        </bottom_surface_id>
                    </regions>
                </extrude>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="P0Mesh">
            <from_mesh>
                <mesh name="BaseMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">0</integer_value>
                    </polynomial_degree>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">4</integer_value>
            </degree>
            <surface_degree>
                <integer_value rank="0">3</integer_value>
            </surface_degree>
        </quadrature>
        <spherical_earth>
            <superparametric_mapping></superparametric_mapping>
        </spherical_earth>
        <ocean_boundaries>
            <top_surface_ids>
                <integer_value rank="1" shape="1">1</integer_value>
            </top_surface_ids>
            <bottom_surface_ids>
                <integer_value rank="1" shape="1">2</integer_value>
            </bottom_surface_ids>
            <scalar_field name="DistanceToTop" rank="0">
                <diagnostic>
                    <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                    <mesh name="CoordinateMesh"></mesh>
                    <output></output>
                    <stat></stat>
                    <convergence>
                        <include_in_convergence></include_in_convergence>
                    </convergence>
                    <detectors>
                        <include_in_detectors></include_in_detectors>
                    </detectors>
                    <steady_state>
                        <include_in_steady_state></include_in_steady_state>
                    </steady_state>
                </diagnostic>
            </scalar_field>
            <scalar_field name="DistanceToBottom" rank="0">
                <diagnostic>
                    <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                    <mesh name="CoordinateMesh"></mesh>
                    <output></output>
                    <stat></stat>
                    <convergence>
                        <include_in_convergence></include_in_convergence>
                    </convergence>
                    <detectors>
                        <include_in_detectors></include_in_detectors>
                    </detectors>
                    <steady_state>
                        <include_in_steady_state></include_in_steady_state>
                    </steady_state>
                </diagnostic>
            </scalar_field>
        </ocean_boundaries>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">0</real_value>
                <comment>43200: dump results every 12 hours (0.5 days) of simulated time. Given a finish-time of 2592000 s (1 month), 60 dumps are expected. Given a time-step size of 300s, a dump every 144 time steps is expected.</comment>
            </constant>
        </dump_period>
        <output_mesh name="VelocityMesh"></output_mesh>
        <checkpointing>
            <checkpoint_period_in_dumps>
                <integer_value rank="0">10</integer_value>
            </checkpoint_period_in_dumps>
            <checkpoint_at_end></checkpoint_at_end>
        </checkpointing>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
            <time_units date="seconds since 1987-01-05 00:00.0"></time_units>
        </current_time>
        <timestep>
            <real_value rank="0">3600</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">2592000</real_value>
            <comment>(2592000)1 month, in seconds. Given a timestep size of 300 s, the simulation should perform 8640 time-steps.</comment>
        </finish_time>
        <final_timestep>
            <integer_value rank="0">2</integer_value>
        </final_timestep>
        <nonlinear_iterations>
            <integer_value rank="0">2</integer_value>
        </nonlinear_iterations>
    </timestepping>
    <physical_parameters>
        <gravity>
            <magnitude>
                <real_value rank="0">9.81</real_value>
            </magnitude>
            <vector_field name="GravityDirection" rank="1">
                <prescribed>
                    <mesh name="CoordinateMesh"></mesh>
                    <value name="WholeMesh">
                        <python>
                            <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;&#x0A;  a = X[0]&#x0A;  b = X[1]&#x0A;  c = X[2]&#x0A;  &#x0A;  x_component = -(a/((a**2+b**2+c**2)**0.5)) &#x0A;  y_component = -(b/((a**2+b**2+c**2)**0.5))&#x0A;  z_component = -(c/((a**2+b**2+c**2)**0.5))&#x0A;  &#x0A;  return [x_component, y_component, z_component]</string_value>
                        </python>
                    </value>
                    <output></output>
                    <stat>
                        <include_in_stat></include_in_stat>
                    </stat>
                    <detectors>
                        <exclude_from_detectors></exclude_from_detectors>
                    </detectors>
                </prescribed>
            </vector_field>
        </gravity>
        <coriolis>
            <on_sphere>
                <omega>
                    <real_value rank="0">7.27220522e-05</real_value>
                </omega>
            </on_sphere>
        </coriolis>
    </physical_parameters>
    <material_phase name="Fields">
        <equation_of_state>
            <fluids>
                <linear>
                    <reference_density>
                        <real_value rank="0">1</real_value>
                    </reference_density>
                    <subtract_out_hydrostatic_level></subtract_out_hydrostatic_level>
                </linear>
            </fluids>
        </equation_of_state>
        <scalar_field name="Pressure" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <remove_stabilisation_term></remove_stabilisation_term>
                        <integrate_continuity_by_parts></integrate_continuity_by_parts>
                    </continuous_galerkin>
                </spatial_discretisation>
                <scheme>
                    <poisson_pressure_solution>
                        <string_value lines="1">only first timestep</string_value>
                    </poisson_pressure_solution>
                    <use_projection_method></use_projection_method>
                </scheme>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="mg">
                        <vertical_lumping></vertical_lumping>
                    </preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-08</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">5000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <free_surface>
                        <python>
                            <string_value type="code" lines="20" language="python">def val(X,t):&#x0A;  from math import asin, atan2, sqrt, pi, exp&#x0A;  r=sqrt(sum([x**2 for x in X]))&#x0A;  lon=180/pi*atan2(X[1],X[0])&#x0A;  lat=180/pi*asin(X[2]/r)&#x0A;  d=(lat-52.75)**2+(lon+5.875)**2&#x0A;  return exp(-d)</string_value>
                        </python>
                    </free_surface>
                </initial_condition>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="Density" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="Boussinesq"></equation>
                <spatial_discretisation>
                    <discontinuous_galerkin>
                        <viscosity_scheme>
                            <compact_discontinuous_galerkin></compact_discontinuous_galerkin>
                        </viscosity_scheme>
                        <advection_scheme>
                            <upwind></upwind>
                            <project_velocity_to_continuous>
                                <mesh name="BaseMesh"></mesh>
                            </project_velocity_to_continuous>
                            <integrate_advection_by_parts>
                                <twice></twice>
                            </integrate_advection_by_parts>
                        </advection_scheme>
                    </discontinuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                    <discontinuous_galerkin>
                        <maximum_courant_number_per_subcycle>
                            <real_value rank="0">0.1</real_value>
                        </maximum_courant_number_per_subcycle>
                    </discontinuous_galerkin>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="gmres">
                        <restart>
                            <integer_value rank="0">30</integer_value>
                        </restart>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-08</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">10000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="3" dim1="dim">0 0 0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="FreeSurface">
                    <surface_ids>
                        <integer_value rank="1" shape="1">1</integer_value>
                    </surface_ids>
                    <type name="free_surface"></type>
                </boundary_conditions>
                <boundary_conditions name="NoNormalFlow">
                    <surface_ids>
                        <integer_value rank="1" shape="5">2 1009 1010 1011 1013</integer_value>
                    </surface_ids>
                    <type name="no_normal_flow"></type>
                </boundary_conditions>
                <tensor_field name="Viscosity" rank="2">
                    <prescribed>
                        <value name="WholeMesh">
                            <anisotropic_symmetric>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;    a = X[0]&#x0A;    b = X[1]&#x0A;    c = X[2]&#x0A;    from math import sqrt, sin, cos, atan2, acos&#x0A;    r=sqrt(a**2+b**2+c**2)&#x0A;    #A1=2000.0&#x0A;    A1=20000.0&#x0A;    A2=A1&#x0A;    A3=1.0&#x0A;    phi=atan2(b,a)&#x0A;    theta=acos(c/r)&#x0A;    T11=A1*sin(phi)**2+A2*cos(theta)**2*cos(phi)**2+A3*sin(theta)**2*cos(phi)**2&#x0A;    T12=-A1*sin(phi)*cos(phi)+A2*cos(theta)**2*sin(phi)*cos(phi)+A3*sin(theta)**2*sin(phi)*cos(phi)&#x0A;    T13=-A2*sin(theta)*cos(theta)*cos(phi)+A3*sin(theta)*cos(theta)*cos(phi)&#x0A;    T21=T12&#x0A;    T22=A1*cos(phi)**2+A2*cos(theta)**2*sin(phi)**2+A3*sin(theta)**2*sin(phi)**2&#x0A;    T23=-A2*sin(theta)*cos(theta)*sin(phi)+A3*sin(theta)*cos(theta)*sin(phi)&#x0A;    T31=T13&#x0A;    T32=T23&#x0A;    T33=A2*sin(theta)**2+A3*cos(theta)**2&#x0A;    &#x0A;    return [[T11, T12, T13],&#x0A;           [T21, T22, T23],&#x0A;           [T31, T32, T33]]</string_value>
                                </python>
                            </anisotropic_symmetric>
                        </value>
                        <output></output>
                    </prescribed>
                </tensor_field>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="FreeSurface" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="DG_CourantNumber" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="Partition" rank="0">
            <diagnostic>
                <algorithm name="element_ownership" material_phase_support="single"></algorithm>
                <mesh name="P0Mesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
</fluidity_options>
