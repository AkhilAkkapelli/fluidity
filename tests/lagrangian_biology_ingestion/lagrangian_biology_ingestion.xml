<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<testproblem>
  <name>lagrangian_biology_vew_tm_3d</name>
  <owner userid="mlange"/>
  <tags>flml lagrangian_biology</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>
../../bin/fluidity -v2 -l -p lagrangian_biology_ingestion.flml
    </command_line>
  </problem_definition>
  <variables>
    <variable name="prey_biomass" language="python">
from fluidity_tools import stat_parser
prey_biomass = stat_parser("ingestion_2d.stat")['Water']['PreyEnsembleSize']['integral']
    </variable>
    <variable name="prey_carbon" language="python">
from fluidity_tools import stat_parser
prey_carbon = stat_parser("ingestion_2d.stat")['Water']['PreyParticulateCarbon']['integral']
    </variable>
    <variable name="predator_ingested_cells" language="python">
from fluidity_tools import stat_parser
predator_ingested_cells = stat_parser("ingestion_2d.stat")['Water']['PredatorFoodIngestedCellsInactive']['integral']
    </variable>
    <variable name="predator_carbon" language="python">
from fluidity_tools import stat_parser
predator_carbon = stat_parser("ingestion_2d.stat")['Water']['PredatorParticulateCarbon']['integral']
    </variable>
  </variables>
  <pass_tests>
    <test name="cell_conservation" language="python">
for i in range(1, len(prey_biomass)):
  assert abs(prey_biomass[i-1] - prey_biomass[i] - predator_ingested_cells[i]) &lt; 1.0e-6
    </test>
    <test name="carbon_conservation" language="python">
for i in range(1, len(predator_carbon)):
  assert abs(prey_carbon[i-1] + predator_carbon[i] - 1.0 ) &lt; 1.0e-6
    </test>
    <test name="grazing_threshold" language="python">
assert abs(prey_biomass - 200000.0).all() &gt; 1.0e-6
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
