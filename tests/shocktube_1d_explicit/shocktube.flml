<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">shocktube</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">fluids</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">1</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="tube">
                <format name="triangle"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">0</integer_value>
                    </polynomial_degree>
                    <element_type>
                        <string_value>discontinuous lagrangian</string_value>
                    </element_type>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">5</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">0.01</real_value>
            </constant>
        </dump_period>
        <output_mesh name="CoordinateMesh"></output_mesh>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.001</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">0.1</real_value>
            <comment>Only run for shortly to make this a short test. Should normally be run for 1.0s</comment>
        </finish_time>
        <nonlinear_iterations>
            <integer_value rank="0">1</integer_value>
            <comment>This should really be converged - but it seems stable/accurate enough for a short test.</comment>
            <tolerance>
                <real_value rank="0">1e-07</real_value>
                <infinity_norm></infinity_norm>
            </tolerance>
        </nonlinear_iterations>
    </timestepping>
    <material_phase name="Gas">
        <equation_of_state>
            <compressible>
                <stiffened_gas>
                    <ratio_specific_heats>
                        <real_value rank="0">1.4</real_value>
                    </ratio_specific_heats>
                </stiffened_gas>
            </compressible>
        </equation_of_state>
        <scalar_field name="Pressure" rank="0">
            <diagnostic>
                <mesh name="PressureMesh"></mesh>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="Density" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <equation name="AdvectionDiffusion"></equation>
                <spatial_discretisation>
                    <discontinuous_galerkin>
                        <advection_scheme>
                            <upwind></upwind>
                            <integrate_advection_by_parts>
                                <twice></twice>
                            </integrate_advection_by_parts>
                        </advection_scheme>
                        <diffusion_scheme>
                            <compact_discontinuous_galerkin></compact_discontinuous_galerkin>
                        </diffusion_scheme>
                    </discontinuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">1</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">500</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="Left">
                    <region_ids>
                        <integer_value rank="1" shape="1">1</integer_value>
                    </region_ids>
                    <constant>
                        <real_value rank="0">1</real_value>
                    </constant>
                </initial_condition>
                <initial_condition name="Right">
                    <region_ids>
                        <integer_value rank="1" shape="1">2</integer_value>
                    </region_ids>
                    <constant>
                        <real_value rank="0">0.2</real_value>
                    </constant>
                </initial_condition>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="CoordinateMesh"></mesh>
                <equation name="LinearMomentum"></equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <mass_terms>
                            <lump_mass_matrix></lump_mass_matrix>
                        </mass_terms>
                        <advection_terms></advection_terms>
                        <stress_terms>
                            <tensor_form></tensor_form>
                        </stress_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                    <theta_divergence>
                        <real_value rank="0">0.5</real_value>
                    </theta_divergence>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">2000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="1" dim1="dim">0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="Ends">
                    <surface_ids>
                        <integer_value rank="1" shape="2">1 2</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <align_bc_with_cartesian>
                            <x_component>
                                <constant>
                                    <real_value rank="0">0</real_value>
                                </constant>
                            </x_component>
                        </align_bc_with_cartesian>
                    </type>
                </boundary_conditions>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="InternalEnergy" rank="0">
            <prognostic>
                <mesh name="CoordinateMesh"></mesh>
                <equation name="InternalEnergy">
                    <density name="Density"></density>
                </equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <advection_terms></advection_terms>
                        <mass_terms></mass_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">1000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="0">2.5</real_value>
                    </constant>
                </initial_condition>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="FiniteElementDivergence" rank="0">
            <diagnostic field_name="Velocity">
                <algorithm name="Internal" legacy="true" material_phase_support="multiple"></algorithm>
                <mesh name="CoordinateMesh"></mesh>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">2000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="AnalyticalPressure" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">import numpy&#x0A;import shocktube&#x0A;x = state.vector_fields[&apos;DiagnosticCoordinate&apos;]&#x0A;time = state.scalar_fields[&apos;Time&apos;]&#x0A;t=time[0]&#x0A;for (i,xi) in enumerate(x.val):&#x0A;  sol=shocktube.solution(xi[0],t)&#x0A;  field.set(i, sol[0])</string_value>
                </algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="PressureError" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="Pressure" source_field_2_name="AnalyticalPressure" material_phase_support="single" source_field_1_type="scalar"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="AnalyticalDensity" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">import numpy&#x0A;import shocktube&#x0A;x = state.vector_fields[&apos;DiagnosticCoordinate&apos;]&#x0A;time = state.scalar_fields[&apos;Time&apos;]&#x0A;t=time[0]&#x0A;for (i,xi) in enumerate(x.val):&#x0A;  sol=shocktube.solution(xi[0],t)&#x0A;  field.set(i, sol[2])</string_value>
                </algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="DensityError" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="Density" source_field_2_name="AnalyticalDensity" material_phase_support="single" source_field_1_type="scalar"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="AnalyticalInternalEnergy" rank="0">
            <diagnostic>
                <algorithm name="scalar_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">import numpy&#x0A;import shocktube&#x0A;x = state.vector_fields[&apos;Coordinate&apos;]&#x0A;time = state.scalar_fields[&apos;Time&apos;]&#x0A;t=time[0]&#x0A;for (i,xi) in enumerate(x.val):&#x0A;  sol=shocktube.solution(xi[0],t)&#x0A;  p=sol[0]; rho=sol[2]&#x0A;  field.set(i, p/rho/(shocktube.gamma-1.0))</string_value>
                </algorithm>
                <mesh name="CoordinateMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="InternalEnergyError" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="InternalEnergy" source_field_2_name="AnalyticalInternalEnergy" material_phase_support="single" source_field_1_type="scalar"></algorithm>
                <mesh name="CoordinateMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <vector_field name="AnalyticalVelocity" rank="1">
            <diagnostic>
                <algorithm name="vector_python_diagnostic" material_phase_support="single">
                    <string_value lines="20" type="python">import numpy&#x0A;import shocktube&#x0A;x = state.vector_fields[&apos;Coordinate&apos;]&#x0A;time = state.scalar_fields[&apos;Time&apos;]&#x0A;t=time[0]&#x0A;for (i,xi) in enumerate(x.val):&#x0A;  sol=shocktube.solution(xi[0],t)&#x0A;  field.set(i, [sol[1]])</string_value>
                </algorithm>
                <mesh name="CoordinateMesh"></mesh>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </vector_field>
        <vector_field name="VelocityError" rank="1">
            <diagnostic>
                <algorithm name="vector_difference" source_field_2_type="vector" source_field_1_name="Velocity" source_field_2_name="AnalyticalVelocity" material_phase_support="single" source_field_1_type="vector"></algorithm>
                <mesh name="CoordinateMesh"></mesh>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </vector_field>
        <vector_field name="DiagnosticCoordinate" rank="1">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </vector_field>
    </material_phase>
</fluidity_options>
