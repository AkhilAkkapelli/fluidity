<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">geopressure_8</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">oceans</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="square-8">
                <format name="triangle"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">6</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="GeostrophicPressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">3</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">12</integer_value>
            </degree>
            <quadrature_family>
                <string_value>family_grundmann_moeller</string_value>
            </quadrature_family>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">1</real_value>
            </constant>
        </dump_period>
        <output_mesh name="CoordinateMesh"></output_mesh>
        <stat></stat>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">1</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">1</real_value>
        </finish_time>
    </timestepping>
    <physical_parameters>
        <coriolis>
            <f_plane>
                <f>
                    <real_value rank="0">1</real_value>
                </f>
            </f_plane>
        </coriolis>
    </physical_parameters>
    <material_phase name="Fluid">
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="Boussinesq"></equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <mass_terms>
                            <exclude_mass_terms></exclude_mass_terms>
                        </mass_terms>
                        <advection_terms>
                            <exclude_advection_terms></exclude_advection_terms>
                        </advection_terms>
                        <stress_terms>
                            <tensor_form></tensor_form>
                        </stress_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="none"></preconditioner>
                    <relative_error>
                        <real_value rank="0">0.5</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">0</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(x, t):&#x0A;&#x09;import math&#x0A;&#x0A;&#x09;x, y = x[0] * math.pi, x[1] * math.pi&#x0A;&#x0A;&#x09;comp = math.sin(x) * math.sin(y)&#x0A;&#x0A;&#x09;# We don&apos;t care about incompressibility for the purposes of this test&#x0A;&#x09;return [math.sin(x) * math.sin(y), math.cos(x) * math.cos(y)]</string_value>
                    </python>
                </initial_condition>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="GeostrophicPressure" rank="0">
            <prognostic>
                <mesh name="GeostrophicPressureMesh"></mesh>
                <spatial_discretisation>
                    <geostrophic_pressure_option>
                        <string_value>exclude_buoyancy</string_value>
                    </geostrophic_pressure_option>
                </spatial_discretisation>
                <reference_node name="node_1">
                    <integer_value rank="0" shape="1">1</integer_value>
                </reference_node>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-16</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">3000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="Analytic" rank="0">
            <prescribed>
                <mesh name="GeostrophicPressureMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">def val(x, t):&#x0A;&#x09;import math&#x0A;&#x0A;&#x09;x, y = x[0] * math.pi, x[1] * math.pi&#x0A;&#x0A;&#x09;comp = math.sin(x) * math.sin(y)&#x0A;&#x09;u = [comp, comp]&#x0A;&#x0A;&#x09;return (math.sin(x) * math.cos(y)) / math.pi</string_value>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="ScalarAbsoluteDifference" rank="0">
            <diagnostic field_name_b="GeostrophicPressure" field_name_a="Analytic">
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="GeostrophicPressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
</fluidity_options>
