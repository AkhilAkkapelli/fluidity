<?xml version="1.0" encoding="UTF-8" ?>

<testproblem>
  <name>Testing of particle vector and tensor attributes in serial</name>
  <owner userid="cmath"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>
../../bin/fluidity -v3 -l particle_vectors_tensors.flml
    </command_line>
  </problem_definition>
  <variables>
    <variable name="vector_error_1" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes.particles.PosMeasure.h5part', 'r')
n = len(f)-1
att_1 = f[f'/Step#{n}/FullVec1_1'][:]
att_2 = f[f'/Step#{n}/FullVec1_2'][:]
vec_error = np.sqrt((att_1 - 1.0)**2+(att_2-2.0)**2)
vector_error_1=abs(vec_error).max()

print ("max error",vector_error_1)
    </variable>
    <variable name="vector_error_2" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes.particles.PosMeasure.h5part', 'r')
n = len(f)-1
att_1 = f[f'/Step#{n}/FullVec2_1'][:]
att_2 = f[f'/Step#{n}/FullVec2_2'][:]
vec_error = np.sqrt((att_1 - 0.0)**2+(att_2-1.0)**2)
vector_error_2=abs(vec_error).max()

print ("max error",vector_error_2)
    </variable>
    <variable name="vector_error_3" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes.particles.PosMeasure.h5part', 'r')
n = len(f)-1
att_1 = f[f'/Step#{n}/FullVec3_1'][:]
att_2 = f[f'/Step#{n}/FullVec3_2'][:]
vec_error = np.sqrt((att_1 - 1.0)**2+(att_2-2.0)**2)
vector_error_3=abs(vec_error).max()

print ("max error",vector_error_3)
    </variable>
    <variable name="tensor_error_1" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes.particles.PosMeasure.h5part', 'r')
n = len(f)-1
att_1 = f[f'/Step#{n}/FullTens_11'][:]
att_2 = f[f'/Step#{n}/FullTens_21'][:]
att_3 = f[f'/Step#{n}/FullTens_12'][:]
att_4 = f[f'/Step#{n}/FullTens_22'][:]
ten_error = np.sqrt((att_1 - 1.0)**2+(att_2 - 2.0)**2+(att_3 - 3.0)**2+(att_4 - 4.0)**2)
tensor_error_1=abs(ten_error).max()

print ("max error",tensor_error_1)
    </variable>
    <variable name="tensor_error_2" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes.particles.PosMeasure.h5part', 'r')
n = len(f)-1
att_1 = f[f'/Step#{n}/FullTens2_11'][:]
att_2 = f[f'/Step#{n}/FullTens2_21'][:]
att_3 = f[f'/Step#{n}/FullTens2_12'][:]
att_4 = f[f'/Step#{n}/FullTens2_22'][:]
ten_error = np.sqrt((att_1 - 1.0)**2+(att_2 - 2.0)**2+(att_3 - 3.0)**2+(att_4 - 4.0)**2)
tensor_error_2=abs(ten_error).max()

print ("max error",tensor_error_2)
    </variable>
    <variable name="Walltime" language="python">
from fluidity_tools import stat_parser
import numpy as np

s = stat_parser('particle_attributes.stat')
Walltime = s['ElapsedWallTime']["value"][-1]
print ("Total wall time", Walltime)
    </variable>
  </variables>
  <pass_tests>
    <test name="Maxvectorerror1" language="python">
assert abs(vector_error_1).max() &lt; 1.0e-5
    </test>
    <test name="Maxvectorerror2" language="python">
assert abs(vector_error_2).max() &lt; 1.0e-5
    </test>
    <test name="Maxvectorerror3" language="python">
assert abs(vector_error_3).max() &lt; 1.0e-5
    </test>
    <test name="Maxtensorerror1" language="python">
assert abs(tensor_error_1).max() &lt; 1.0e-5
    </test>
    <test name="Maxtensorerror2" language="python">
assert abs(tensor_error_2).max() &lt; 1.0e-5
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
