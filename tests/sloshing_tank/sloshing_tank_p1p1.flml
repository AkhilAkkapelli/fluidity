<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">sloshing_tank_p1p1</string_value>
        <comment>Sloshing mesh with analytical solution&#x0A;Shows how numerical scheme predicts frequencey and damping rate</comment>
    </simulation_name>
    <problem_type>
        <string_value lines="1">fluids</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">3</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="src/mesh2">
                <format name="gmsh"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="PressureMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">5</integer_value>
            </degree>
            <surface_degree>
                <integer_value rank="0">5</integer_value>
            </surface_degree>
        </quadrature>
        <ocean_boundaries>
            <top_surface_ids>
                <integer_value rank="1" shape="1">29</integer_value>
            </top_surface_ids>
            <bottom_surface_ids>
                <integer_value rank="1" shape="1">30</integer_value>
            </bottom_surface_ids>
            <scalar_field name="DistanceToTop" rank="0">
                <diagnostic>
                    <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                    <mesh name="CoordinateMesh"></mesh>
                    <output></output>
                    <stat></stat>
                    <convergence>
                        <include_in_convergence></include_in_convergence>
                    </convergence>
                    <detectors>
                        <include_in_detectors></include_in_detectors>
                    </detectors>
                    <steady_state>
                        <include_in_steady_state></include_in_steady_state>
                    </steady_state>
                </diagnostic>
            </scalar_field>
            <scalar_field name="DistanceToBottom" rank="0">
                <diagnostic>
                    <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                    <mesh name="CoordinateMesh"></mesh>
                    <output></output>
                    <stat></stat>
                    <convergence>
                        <include_in_convergence></include_in_convergence>
                    </convergence>
                    <detectors>
                        <include_in_detectors></include_in_detectors>
                    </detectors>
                    <steady_state>
                        <include_in_steady_state></include_in_steady_state>
                    </steady_state>
                </diagnostic>
            </scalar_field>
        </ocean_boundaries>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">0</real_value>
            </constant>
        </dump_period>
        <output_mesh name="VelocityMesh"></output_mesh>
        <stat></stat>
        <detectors>
            <static_detector name="left">
                <location>
                    <real_value rank="1" shape="3" dim1="dim">0 0 0</real_value>
                </location>
            </static_detector>
            <static_detector name="middle">
                <location>
                    <real_value rank="1" shape="3" dim1="dim">0.5 0 0</real_value>
                </location>
            </static_detector>
            <fail_outside_domain></fail_outside_domain>
        </detectors>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.2</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">10</real_value>
        </finish_time>
        <nonlinear_iterations>
            <integer_value rank="0">20</integer_value>
            <tolerance>
                <real_value rank="0">1e-05</real_value>
                <infinity_norm></infinity_norm>
            </tolerance>
            <terminate_if_not_converged></terminate_if_not_converged>
        </nonlinear_iterations>
    </timestepping>
    <physical_parameters>
        <gravity>
            <magnitude>
                <real_value rank="0">1</real_value>
            </magnitude>
            <vector_field name="GravityDirection" rank="1">
                <prescribed>
                    <mesh name="CoordinateMesh"></mesh>
                    <value name="WholeMesh">
                        <constant>
                            <real_value rank="1" shape="3" dim1="dim">0 0 -1</real_value>
                        </constant>
                    </value>
                    <output></output>
                    <stat>
                        <include_in_stat></include_in_stat>
                    </stat>
                    <detectors>
                        <exclude_from_detectors></exclude_from_detectors>
                    </detectors>
                </prescribed>
            </vector_field>
        </gravity>
    </physical_parameters>
    <material_phase name="water">
        <equation_of_state>
            <fluids>
                <linear>
                    <reference_density>
                        <real_value rank="0">1</real_value>
                    </reference_density>
                    <subtract_out_hydrostatic_level></subtract_out_hydrostatic_level>
                </linear>
            </fluids>
        </equation_of_state>
        <scalar_field name="Pressure" rank="0">
            <prognostic>
                <mesh name="PressureMesh"></mesh>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <remove_stabilisation_term></remove_stabilisation_term>
                        <integrate_continuity_by_parts></integrate_continuity_by_parts>
                    </continuous_galerkin>
                </spatial_discretisation>
                <scheme>
                    <poisson_pressure_solution>
                        <string_value lines="1">never</string_value>
                    </poisson_pressure_solution>
                    <use_projection_method></use_projection_method>
                </scheme>
                <solver>
                    <iterative_method name="cg"></iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">1000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">from scipy.special import erf&#x0A;def val(X, t):&#x0A;    import settings&#x0A;    import ana_sol&#x0A;    a_0 = settings.a0 # initial maximum perturbation&#x0A;    g = settings.g # gravity&#x0A;    eta= settings.eta # viscosity&#x0A;    L= settings.L # wavelength&#x0A;    timestep= settings.timestep # timestep    &#x0A;    # Check if analytical_solution computes the correct initial condition&#x0A;    init_ana=ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)&#x0A;    return init_ana</string_value>
                        <comment>def val(X, t):&#x0A;   from math import cos&#x0A;   import settings&#x0A;   g=settings.g&#x0A;   a0=settings.a0&#x0A;   return  (g*a0*cos(3.1415926536*(X[0]**2+X[1]**2)**0.5))</comment>
                    </python>
                </initial_condition>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <scalar_field name="Density" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="VelocityMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="Boussinesq"></equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <mass_terms>
                            <lump_mass_matrix></lump_mass_matrix>
                        </mass_terms>
                        <advection_terms>
                            <exclude_advection_terms></exclude_advection_terms>
                        </advection_terms>
                        <stress_terms>
                            <tensor_form></tensor_form>
                        </stress_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">0</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">0.5</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="gmres">
                        <restart>
                            <integer_value rank="0">100</integer_value>
                        </restart>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-07</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">1000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="WholeMesh">
                    <constant>
                        <real_value rank="1" shape="3" dim1="dim">0 0 0</real_value>
                    </constant>
                </initial_condition>
                <boundary_conditions name="SidesNoNormalFlow">
                    <surface_ids>
                        <integer_value rank="1" shape="2">31 32</integer_value>
                    </surface_ids>
                    <type name="no_normal_flow"></type>
                </boundary_conditions>
                <boundary_conditions name="fs">
                    <surface_ids>
                        <integer_value rank="1" shape="1">29</integer_value>
                    </surface_ids>
                    <type name="free_surface"></type>
                </boundary_conditions>
                <boundary_conditions name="BottomNoNormalFlow">
                    <surface_ids>
                        <integer_value rank="1" shape="1">30</integer_value>
                    </surface_ids>
                    <type name="no_normal_flow"></type>
                </boundary_conditions>
                <tensor_field name="Viscosity" rank="2">
                    <prescribed>
                        <value name="WholeMesh">
                            <isotropic>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;    import settings&#x0A;    return settings.eta</string_value>
                                </python>
                            </isotropic>
                        </value>
                        <output></output>
                    </prescribed>
                </tensor_field>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
        <scalar_field name="FreeSurface" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
        <scalar_field name="FreeSurface_Analytical" rank="0">
            <prescribed>
                <mesh name="PressureMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value lines="20" type="code" language="python">from scipy.special import erf&#x0A;def val(X, t):&#x0A;    import settings&#x0A;    import ana_sol&#x0A;    a_0 = settings.a0 # initial maximum perturbation&#x0A;    g = settings.g # gravity&#x0A;    eta= settings.eta # viscosity&#x0A;    L= settings.L # wavelength&#x0A;    timestep= settings.timestep # timestep    &#x0A;    return ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)</string_value>
                        <comment>def val(X, t):&#x0A;    #import settings&#x0A;    #import ana_sol&#x0A;    #from scipy.special import erf&#x0A;    import scipy&#x0A;    #from scipy.interpolate import interp1d&#x0A;    #a_0 = settings.a0 # initial maximum perturbation&#x0A;    #g = settings.g # gravity&#x0A;    #eta= settings.eta # viscosity&#x0A;    #L= settings.L # wavelength&#x0A;    #timestep= settings.timestep # timestep    &#x0A;    return 0.0 #ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)# Return value</comment>
                    </python>
                </value>
                <output></output>
                <stat></stat>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
            </prescribed>
        </scalar_field>
        <scalar_field name="FreeSurface_Error" rank="0">
            <diagnostic>
                <algorithm name="scalar_difference" source_field_2_type="scalar" source_field_1_name="FreeSurface" source_field_2_name="FreeSurface_Analytical" material_phase_support="single" source_field_1_type="scalar"></algorithm>
                <mesh name="PressureMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
    <mesh_adaptivity>
        <mesh_movement>
            <free_surface>
                <move_whole_mesh></move_whole_mesh>
            </free_surface>
            <vector_field name="GridVelocity" rank="1">
                <diagnostic>
                    <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                    <mesh name="CoordinateMesh"></mesh>
                    <output></output>
                    <stat>
                        <include_in_stat></include_in_stat>
                    </stat>
                    <convergence>
                        <include_in_convergence></include_in_convergence>
                    </convergence>
                    <detectors>
                        <include_in_detectors></include_in_detectors>
                    </detectors>
                    <steady_state>
                        <include_in_steady_state></include_in_steady_state>
                    </steady_state>
                </diagnostic>
            </vector_field>
        </mesh_movement>
    </mesh_adaptivity>
</fluidity_options>
