<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">flredecomp_field_weighted_partition_test</string_value>
        <comment>Checks for field_weighted_partitions in flredecomp and gmsh2triangle -i. </comment>
    </simulation_name>
    <problem_type>
        <string_value lines="1">stokes</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="Subduction_Mesh">
                <format name="triangle"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">5</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">2000000000000</real_value>
            </constant>
        </dump_period>
        <output_mesh name="CoordinateMesh"></output_mesh>
        <stat>
            <output_at_start></output_at_start>
        </stat>
        <detectors>
            <static_detector name="Temperature6060">
                <location>
                    <real_value rank="1" shape="2" dim1="dim">60000 -60000</real_value>
                </location>
            </static_detector>
            <detector_array name="TSlab">
                <number_of_detectors>
                    <integer_value rank="0">36</integer_value>
                </number_of_detectors>
                <static></static>
                <python>
                    <string_value lines="20" type="code" language="python">def val(t):&#x0A;  import numpy&#x0A;  start = numpy.array([0, 0])&#x0A;  end = numpy.array([210000, -210000])&#x0A;  output = []&#x0A;  for i in range(36):&#x0A;    output.append(start + (float(i)/35) * end)&#x0A;  return output</string_value>
                </python>
            </detector_array>
            <detector_array name="TWedge">
                <number_of_detectors>
                    <integer_value rank="0">78</integer_value>
                </number_of_detectors>
                <static></static>
                <python>
                    <string_value lines="20" type="code" language="python">def val(t):&#x0A;  output1 = []&#x0A;  for i in range(12):&#x0A;    for j in range(12):&#x0A;        if i &gt;= j:&#x0A;           output1.append([54000 + (float(i)/20) * 120000, -54000 + (float(j)/20) * (-120000)])&#x0A;  return output1</string_value>
                </python>
            </detector_array>
            <fail_outside_domain></fail_outside_domain>
        </detectors>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">100000000000</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">1e+15</real_value>
        </finish_time>
        <adaptive_timestep>
            <requested_cfl>
                <real_value rank="0">3</real_value>
            </requested_cfl>
            <courant_number name="CFLNumber">
                <mesh name="CoordinateMesh"></mesh>
            </courant_number>
            <increase_tolerance>
                <real_value rank="0">5</real_value>
            </increase_tolerance>
        </adaptive_timestep>
        <steady_state>
            <tolerance>
                <real_value rank="0">0.001</real_value>
                <infinity_norm></infinity_norm>
            </tolerance>
        </steady_state>
    </timestepping>
    <material_phase name="Fluid">
        <scalar_field name="Pressure" rank="0">
            <prognostic>
                <mesh name="CoordinateMesh"></mesh>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <remove_stabilisation_term></remove_stabilisation_term>
                    </continuous_galerkin>
                </spatial_discretisation>
                <scheme>
                    <poisson_pressure_solution>
                        <string_value lines="1">never</string_value>
                    </poisson_pressure_solution>
                    <use_projection_method>
                        <full_schur_complement>
                            <inner_matrix name="FullMomentumMatrix">
                                <solver>
                                    <iterative_method name="preonly"></iterative_method>
                                    <preconditioner name="lu"></preconditioner>
                                    <relative_error>
                                        <real_value rank="0">1e-06</real_value>
                                    </relative_error>
                                    <max_iterations>
                                        <integer_value rank="0">10000</integer_value>
                                    </max_iterations>
                                    <start_from_zero></start_from_zero>
                                    <never_ignore_solver_failures></never_ignore_solver_failures>
                                    <diagnostics>
                                        <monitors></monitors>
                                    </diagnostics>
                                </solver>
                            </inner_matrix>
                            <preconditioner_matrix name="DiagonalSchurComplement"></preconditioner_matrix>
                        </full_schur_complement>
                    </use_projection_method>
                </scheme>
                <solver>
                    <iterative_method name="fgmres"></iterative_method>
                    <preconditioner name="jacobi"></preconditioner>
                    <relative_error>
                        <real_value rank="0">0.0001</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">10000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <steady_state>
                    <exclude_from_steady_state></exclude_from_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </scalar_field>
        <vector_field name="Velocity" rank="1">
            <prognostic>
                <mesh name="VelocityMesh"></mesh>
                <equation name="LinearMomentum"></equation>
                <spatial_discretisation>
                    <continuous_galerkin>
                        <stabilisation>
                            <no_stabilisation></no_stabilisation>
                        </stabilisation>
                        <mass_terms>
                            <exclude_mass_terms></exclude_mass_terms>
                        </mass_terms>
                        <advection_terms>
                            <exclude_advection_terms></exclude_advection_terms>
                        </advection_terms>
                        <stress_terms>
                            <tensor_form></tensor_form>
                        </stress_terms>
                    </continuous_galerkin>
                    <conservative_advection>
                        <real_value rank="0">1</real_value>
                    </conservative_advection>
                </spatial_discretisation>
                <temporal_discretisation>
                    <theta>
                        <real_value rank="0">1</real_value>
                    </theta>
                    <relaxation>
                        <real_value rank="0">1</real_value>
                    </relaxation>
                </temporal_discretisation>
                <solver>
                    <iterative_method name="preonly"></iterative_method>
                    <preconditioner name="lu"></preconditioner>
                    <relative_error>
                        <real_value rank="0">1e-06</real_value>
                    </relative_error>
                    <max_iterations>
                        <integer_value rank="0">10000</integer_value>
                    </max_iterations>
                    <never_ignore_solver_failures></never_ignore_solver_failures>
                    <diagnostics>
                        <monitors></monitors>
                    </diagnostics>
                </solver>
                <initial_condition name="Batchelor">
                    <region_ids>
                        <integer_value rank="1" shape="1">27</integer_value>
                    </region_ids>
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;  &#x0A;   &#x09;from math import sqrt, atan, cos, sin, pi&#x0A;&#x0A;   &#x09;Xcoord = X[0]&#x0A;        Ycoord = X[1]&#x0A;  &#x0A;   &#x09;Depth = (X[1] * -1.) -50000.&#x0A;   &#x09;Xdist  = X[0] -50000.&#x0A;&#x0A;   &#x09;if(Xdist == 0.) :&#x0A;&#x09;   &#x09;Xdist = 0.000000000000001&#x0A;&#x0A;   &#x09;if Depth == 0 :&#x0A; &#x0A;      &#x09;&#x09;Vx = 0.&#x0A;      &#x09;&#x09;Vy = 0.&#x0A;&#x0A;   &#x09;else :&#x0A; &#x0A;      &#x09;&#x09;ALFA = atan(1)&#x0A;      &#x09;&#x09;THETA = atan(Depth/Xdist)&#x0A;&#x0A;&#x09;&#x09;VTHETA = (((ALFA - THETA) * sin(THETA) * sin(ALFA)) - (ALFA * THETA * sin(ALFA-THETA))) / (ALFA**2 - (sin(ALFA)**2))&#x0A;&#x09;&#x09;VTHETA = VTHETA * (0.05/(3600.*24.*365.)) *-1.&#x0A;&#x0A;&#x09;&#x09;VR = (((ALFA - THETA) * cos(THETA) * sin(ALFA)) - (sin(ALFA) * sin(THETA)) - (ALFA * sin(ALFA-THETA)) + (ALFA*THETA*cos(ALFA-THETA))) / ((ALFA**2) - (sin(ALFA))**2)&#x0A;      &#x09;&#x09;VR = VR * (0.05/(3600.*24.*365.))&#x0A;&#x0A;      &#x09;&#x09;Vx = -( VTHETA*sin(THETA) - VR*cos(THETA) )&#x0A;      &#x09;&#x09;Vy = - (VTHETA*cos(THETA) + VR*sin(THETA) )&#x0A;&#x0A;   &#x09;return [Vx, Vy]</string_value>
                    </python>
                </initial_condition>
                <prescribed_region name="Crust">
                    <region_ids>
                        <integer_value rank="1" shape="1">24</integer_value>
                    </region_ids>
                    <constant>
                        <real_value rank="1" shape="2" dim1="dim">0 0</real_value>
                    </constant>
                </prescribed_region>
                <prescribed_region name="Slab">
                    <region_ids>
                        <integer_value rank="1" shape="1">30</integer_value>
                    </region_ids>
                    <python>
                        <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;        from math import sqrt&#x0A;        vx = sqrt(((0.05/(3600.*24.*365.))**2.)/2.)&#x0A;        vy = -sqrt(((0.05/(3600.*24.*365.))**2.)/2.)&#x0A;        return [vx,vy]</string_value>
                    </python>
                </prescribed_region>
                <boundary_conditions name="Crust">
                    <surface_ids>
                        <integer_value rank="1" shape="1">32</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <align_bc_with_cartesian>
                            <x_component>
                                <constant>
                                    <real_value rank="0">0</real_value>
                                </constant>
                            </x_component>
                            <y_component>
                                <constant>
                                    <real_value rank="0">0</real_value>
                                </constant>
                            </y_component>
                        </align_bc_with_cartesian>
                    </type>
                </boundary_conditions>
                <boundary_conditions name="Slab">
                    <surface_ids>
                        <integer_value rank="1" shape="1">31</integer_value>
                    </surface_ids>
                    <type name="dirichlet">
                        <align_bc_with_cartesian>
                            <x_component>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;        from math import sqrt&#x0A;        vx = sqrt(((0.05/(3600.*24.*365.))**2.)/2.)&#x0A;        return vx</string_value>
                                </python>
                            </x_component>
                            <y_component>
                                <python>
                                    <string_value lines="20" type="code" language="python">def val(X, t):&#x0A;        from math import sqrt&#x0A;        vy = -sqrt(((0.05/(3600.*24.*365.))**2.)/2.)&#x0A;        return vy</string_value>
                                </python>
                            </y_component>
                        </align_bc_with_cartesian>
                    </type>
                </boundary_conditions>
                <tensor_field name="Viscosity" rank="2">
                    <prescribed>
                        <value name="WholeMesh">
                            <isotropic>
                                <constant>
                                    <real_value rank="0">1e+21</real_value>
                                </constant>
                            </isotropic>
                        </value>
                        <output></output>
                    </prescribed>
                </tensor_field>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                    <surface_integral name="Outflow" type="normal">
                        <surface_ids>
                            <integer_value rank="1" shape="2">13 16</integer_value>
                        </surface_ids>
                    </surface_integral>
                    <surface_integral name="All" type="normal">
                        <surface_ids>
                            <integer_value rank="1" shape="3">12 13 16</integer_value>
                        </surface_ids>
                    </surface_integral>
                    <previous_time_step>
                        <exclude_from_stat></exclude_from_stat>
                    </previous_time_step>
                    <nonlinear_field>
                        <exclude_from_stat></exclude_from_stat>
                    </nonlinear_field>
                </stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <consistent_interpolation></consistent_interpolation>
            </prognostic>
        </vector_field>
    </material_phase>
    <flredecomp>
        <field_weighted_partitions>
            <scalar_field name="FieldWeightedPartitionValues" rank="0">
                <prescribed>
                    <mesh name="CoordinateMesh"></mesh>
                    <value name="Prognostic_Regions">
                        <region_ids>
                            <integer_value rank="1" shape="1">27</integer_value>
                        </region_ids>
                        <constant>
                            <real_value rank="0">1</real_value>
                        </constant>
                    </value>
                    <value name="Prescribed_Regions">
                        <region_ids>
                            <integer_value rank="1" shape="2">24 30</integer_value>
                        </region_ids>
                        <constant>
                            <real_value rank="0">0.005</real_value>
                        </constant>
                    </value>
                    <output></output>
                    <stat></stat>
                    <detectors>
                        <exclude_from_detectors></exclude_from_detectors>
                    </detectors>
                </prescribed>
            </scalar_field>
        </field_weighted_partitions>
    </flredecomp>
</fluidity_options>
